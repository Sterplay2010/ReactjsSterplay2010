[{"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\index.js":"1","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\App.js":"2","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\reportWebVitals.js":"3","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\componentes\\CardJuegos.js":"4"},{"size":517,"mtime":1612634567069,"results":"5","hashOfConfig":"6"},{"size":161,"mtime":1612634567068,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1612634567070,"results":"8","hashOfConfig":"6"},{"size":8533,"mtime":1612648580609,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12mfki5",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\index.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\App.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\reportWebVitals.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\componentes\\CardJuegos.js",["18","19","20","21"],{"ruleId":"22","severity":1,"message":"23","line":17,"column":8,"nodeType":"24","messageId":"25","endLine":17,"endColumn":17},{"ruleId":"22","severity":1,"message":"26","line":18,"column":8,"nodeType":"24","messageId":"25","endLine":18,"endColumn":18},{"ruleId":"27","severity":1,"message":"28","line":97,"column":13,"nodeType":"29","endLine":99,"endColumn":4},{"ruleId":"30","severity":1,"message":"31","line":164,"column":9,"nodeType":"32","endLine":169,"endColumn":11},"no-unused-vars","'InputBase' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]