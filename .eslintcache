<<<<<<< HEAD
[{"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\index.js":"1","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\App.js":"2","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\reportWebVitals.js":"3","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\componentes\\CardJuegos.js":"4"},{"size":517,"mtime":1612634567069,"results":"5","hashOfConfig":"6"},{"size":161,"mtime":1612634567068,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1612634567070,"results":"8","hashOfConfig":"6"},{"size":16823,"mtime":1612994944312,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12mfki5",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\index.js",[],["19","20"],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\App.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\reportWebVitals.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\componentes\\CardJuegos.js",["21","22","23","24","25","26","27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":113,"column":16,"nodeType":"34","messageId":"35","endLine":113,"endColumn":18},{"ruleId":"32","severity":1,"message":"33","line":113,"column":37,"nodeType":"34","messageId":"35","endLine":113,"endColumn":39},{"ruleId":"32","severity":1,"message":"33","line":113,"column":51,"nodeType":"34","messageId":"35","endLine":113,"endColumn":53},{"ruleId":"32","severity":1,"message":"33","line":113,"column":67,"nodeType":"34","messageId":"35","endLine":113,"endColumn":69},{"ruleId":"36","severity":1,"message":"37","line":269,"column":13,"nodeType":"38","endLine":271,"endColumn":4},{"ruleId":"39","severity":1,"message":"40","line":334,"column":11,"nodeType":"41","endLine":339,"endColumn":11},{"ruleId":"39","severity":1,"message":"40","line":420,"column":9,"nodeType":"41","endLine":425,"endColumn":11},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\index.js":"1","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\App.js":"2","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\reportWebVitals.js":"3","C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\componentes\\CardJuegos.js":"4"},{"size":517,"mtime":1612634567069,"results":"5","hashOfConfig":"6"},{"size":161,"mtime":1612634567068,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1612634567070,"results":"8","hashOfConfig":"6"},{"size":14283,"mtime":1612814220180,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"12mfki5",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\index.js",[],["19","20"],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\App.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\reportWebVitals.js",[],"C:\\Users\\Sterplay2010\\Documents\\ReactjsSterplay2010\\src\\componentes\\CardJuegos.js",["21","22","23","24","25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":107,"column":16,"nodeType":"33","messageId":"34","endLine":107,"endColumn":18},{"ruleId":"31","severity":1,"message":"32","line":107,"column":37,"nodeType":"33","messageId":"34","endLine":107,"endColumn":39},{"ruleId":"31","severity":1,"message":"32","line":107,"column":51,"nodeType":"33","messageId":"34","endLine":107,"endColumn":53},{"ruleId":"31","severity":1,"message":"32","line":107,"column":67,"nodeType":"33","messageId":"34","endLine":107,"endColumn":69},{"ruleId":"35","severity":1,"message":"36","line":246,"column":13,"nodeType":"37","endLine":248,"endColumn":4},{"ruleId":"38","severity":1,"message":"39","line":332,"column":9,"nodeType":"40","endLine":337,"endColumn":11},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
>>>>>>> 53c0bb95dafd774d99d6fa35b3a282f8de4eb37b
